/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.ManufacturingRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Enterprise.EnterpriseType;
import Business.Network.Network;
import Business.Organization.EconomyOrganization;
import Business.Organization.ManufacturingOrganization;
import Business.Organization.Organization;
import Business.Organization.Organization.Type;
import Business.Organization.Vaccine;
import Business.Organization.VaccineDirectory;
import Business.Role.EconomyRole;
import Business.Role.Role;
//import Business.Role;

import Business.WorkQueue.LabTestWorkRequest;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.approveVaccine;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import ui.AdministrativeRole.ManageOrganizationJPanel;

/**
 *
 * @author ruchachotalia
 */
public class ManufacturingWorkAreaJPanel extends javax.swing.JPanel {
        
    private Network network;
    private EcoSystem system;
    private JPanel userProcessContainer;
    private JPanel container;
    private ManufacturingOrganization organization;
    private Enterprise enterprise;
    private VaccineDirectory vaccineDirectory;
    private UserAccount userAccount;
    /**
     * Creates new form DistributionWorkAreaJPanel
     */
    public ManufacturingWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, ManufacturingOrganization organization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.network = network;
        lblVal.setText(account.getEmployee().getName());
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSndSample = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblReq = new javax.swing.JTable();
        btnAddVacc = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        lblText = new javax.swing.JLabel();
        lblVal = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1440, 848));
        setPreferredSize(new java.awt.Dimension(1440, 848));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSndSample.setBackground(new java.awt.Color(255, 255, 255));
        btnSndSample.setFont(new java.awt.Font("Optima", 0, 16)); // NOI18N
        btnSndSample.setText("Send Sample for approval");
        btnSndSample.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSndSampleActionPerformed(evt);
            }
        });
        add(btnSndSample, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 500, -1, -1));

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));

        tblReq.setForeground(new java.awt.Color(36, 47, 65));
        tblReq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Vaccine Name", "Scientific Name", "Manufacturer Name", "Quantity per dose", "Number of Doses", "Status"
            }
        ));
        tblReq.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblReq.setRowHeight(20);
        jScrollPane1.setViewportView(tblReq);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 690, 180));

        btnAddVacc.setBackground(new java.awt.Color(255, 255, 255));
        btnAddVacc.setFont(new java.awt.Font("Optima", 0, 16)); // NOI18N
        btnAddVacc.setText("Add Vaccine");
        btnAddVacc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVaccActionPerformed(evt);
            }
        });
        add(btnAddVacc, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 410, -1, -1));

        btnDel.setBackground(new java.awt.Color(255, 255, 255));
        btnDel.setFont(new java.awt.Font("Optima", 0, 16)); // NOI18N
        btnDel.setText("Delete Vaccine");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        add(btnDel, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 410, -1, -1));

        lblText.setBackground(new java.awt.Color(0, 0, 0));
        lblText.setFont(new java.awt.Font("Optima", 0, 16)); // NOI18N
        lblText.setText("Currently Logged in as:");
        add(lblText, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 30, -1, 30));

        lblVal.setBackground(new java.awt.Color(0, 0, 0));
        lblVal.setFont(new java.awt.Font("Optima", 1, 22)); // NOI18N
        lblVal.setText("<value>");
        add(lblVal, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 30, 230, 30));

        lblTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lab1.jpg"))); // NOI18N
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, -10, 580, 850));
    }// </editor-fold>//GEN-END:initComponents

    private void btnSndSampleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSndSampleActionPerformed

// TODO add your handling code here:
//        this.network = network;
        int selectedRow = tblReq.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a vaccine record to send for approval");
            return;
        }
        approveVaccine lr = new approveVaccine();
        Vaccine v = (Vaccine) tblReq.getValueAt(selectedRow, 0);
        if(v.getStatus().equals("Approved")){
            JOptionPane.showMessageDialog(this, "Vaccine already approved!!");
            return;
        }
        if(v.getStatus().equals("Rejected")){
            JOptionPane.showMessageDialog(this, "Vaccine was rejected, please send new vaccine for approval");
            return;
        }
        UserAccount cg = new UserAccount();
        Network currnet = enterprise.getNetwork();
       
        for(Enterprise e: currnet.getEnterpriseDirectory().getEnterpriseList()){
            
            if(e.getEnterpriseType()==EnterpriseType.Government){
                
                for(Organization o: e.getOrganizationDirectory().getOrganizationList()){
                    
                    for(UserAccount u: o.getUserAccountDirectory().getUserAccountList()){
                        
                        if(u.getRole().toString()=="Business.Role.EconomyRole"){
                            
                            lr.setReceiver(u);
                            
                            cg = u;
                            break;
                        }                        
                        
                    }
                }
            }
        }
        UserAccount sale = new UserAccount();
        for(Enterprise e : currnet.getEnterpriseDirectory().getEnterpriseList()){
            if(e.getEnterpriseType() == EnterpriseType.Pharmaceutical){
                for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                    for(UserAccount u : o.getUserAccountDirectory().getUserAccountList()){
                        if(u.getRole().toString().equals("Business.Role.SalesRole")){
                            
                            lr.setSales(u);
                            sale = u;
                            break;
                        }
                    }
                }
            }
        }
        lr.setVaccine(v);
        lr.setMessage(v.getName());
        lr.setSender(userAccount);
        lr.setStatus("requested");
        cg.getWorkQueue().getWorkRequestList().add(lr);
        sale.getWorkQueue().getWorkRequestList().add(lr);
        JOptionPane.showMessageDialog(this, "Approval Requested!!");
        populateTable();
        
        
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof EconomyOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(lr);
            userAccount.getWorkQueue().getWorkRequestList().add(lr);
        }

    }//GEN-LAST:event_btnSndSampleActionPerformed

    private void btnAddVaccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVaccActionPerformed
        // TODO add your handling code here:
        int count = tblReq.getModel().getRowCount();
        if(count == 0){
            this.vaccineDirectory = vaccineDirectory;
            userProcessContainer.removeAll();
            AddVaccineJPanel addVaccineJPanel = new AddVaccineJPanel(userProcessContainer, enterprise.getOrganizationDirectory(), organization, vaccineDirectory, userAccount, enterprise);
            userProcessContainer.add("addVaccineJPanel", addVaccineJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            populateTable();
        }
        else{
            JOptionPane.showMessageDialog(this, "You already have a vaccine produced, please delete it to create a new one");
            return;
        }
    }//GEN-LAST:event_btnAddVaccActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblReq.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a vaccine record to delete");
            return;
        }
        Vaccine v = (Vaccine) tblReq.getModel().getValueAt(selectedRow, 0);
        organization.deleteVaccine(v);
        populateTable();
    }//GEN-LAST:event_btnDelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddVacc;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnSndSample;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblText;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblVal;
    private javax.swing.JTable tblReq;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblReq.getModel();
        model.setRowCount(0);
        
        for(Vaccine v : organization.getVaccineDirectory()){
            Object[] row = new Object[6];
            row[0] = v;
            row[1] = v.getScientificName();
            row[2] = v.getManufacturerName();
            row[3] = v.getMgQty();
            row[4] = v.getNoOfDoses();
            row[5] = v.getStatus();
            model.addRow(row);
        }
    }
}
